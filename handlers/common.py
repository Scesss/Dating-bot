from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from states.profile_states import ProfileStates
from keyboards.builders import *
from database import db
from aiogram import Bot
import logging
from aiogram import Bot, Router, types
from database.db import *
from typing import Union
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
from aiogram.types import InputMediaPhoto
from handlers.edit_profile import *
from database.db import user_disliked
# ‚Ä¶ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã ‚Ä¶




logger = logging.getLogger(__name__)

# Create router for common commands
common_router = Router()



async def show_profile_info(message: types.Message, profile: dict, for_self: bool = True) -> [[int], [list]]:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –∞–Ω–∫–µ—Ç—ã.
    profile ‚Äì —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ—Ñ–∏–ª—è –∏–∑ –ë–î."""
    # –°–æ–±–∏—Ä–∞–µ–º —Ç–µ–∫—Å—Ç

    caption = (
        ( "üåü –≠—Ç–æ —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞:\n\n" if for_self else "" ) +
        f"üë§ –ò–º—è: {profile.get('name', 'N/A')}\n"
        f"üéÇ –í–æ–∑—Ä–∞—Å—Ç: {profile.get('age', 'N/A')}\n"
        f"üöª –ü–æ–ª: {profile.get('gender', 'N/A')}\n"
        f"üíò –ò—â–µ—Ç: {profile.get('looking_for', 'N/A')}\n"
        f"üìç –ì–æ—Ä–æ–¥: {profile.get('city') or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
        f"üìñ –û —Å–µ–±–µ: { (profile.get('bio') or '–ù/–î')[:1000] }"
    )
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é, –µ—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ

    try:
        if profile.get('photo_id'):
            await message.answer_photo(profile['photo_id'], caption=caption)
        else:
            await message.answer(caption)
    except Exception as e:
        logger.error(f"Failed to send profile info: {e}")
    return [profile['photo_id'], caption]


@common_router.message(Command("start"))
async def cmd_start(message: types.Message, state: FSMContext, bot : Bot):
    member = await bot.get_chat_member(chat_id="@CafeDateInc", user_id=message.from_user.id)
    if member.status in ("left", "kicked"):
        await message.answer("‚ùóÔ∏è–î–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª: @CafeDateInc")
        return

    await state.clear()
    user_id = message.from_user.id
    logger.info(f"Start command from {user_id}")
    profile = db.get_profile(user_id)


    if profile:
        await message.answer("üìÑ –•–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –≤—Å–µ —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞?", reply_markup=build_restart_keyboard())
        await state.set_state(ProfileStates.RESTART)
        # # –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –µ—Å—Ç—å ‚Äì –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ
        # gender = profile["gender"] if profile else "–ü–∞—Ä–µ–Ω—å"
        # await message.answer("‚è≥ –û—Ç–∫—Ä—ã–≤–∞–µ–º –∞–Ω–∫–µ—Ç—É...", reply_markup=build_menu_keyboard(gender))
        # # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–µ–Ω—é (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω)
        # await state.set_state(ProfileStates.MENU)
        # # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∞–Ω–∫–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (—Å–º. —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª –æ —Ñ–æ—Ä–º–∞—Ç–µ –≤—ã–≤–æ–¥–∞)
        # await show_profile_info(message, profile)
    else:
        # –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—è –Ω–µ—Ç ‚Äì –∑–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        await state.set_state(ProfileStates.NAME)
        await message.answer("–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?", reply_markup=build_cancel_keyboard())

@common_router.message(Command("profile"))
async def cmd_profile(message: types.Message, state: FSMContext, bot : Bot):
    member = await bot.get_chat_member(chat_id="@CafeDateInc", user_id=message.from_user.id)
    if member.status in ("left", "kicked"):
        await message.answer("‚ùóÔ∏è–î–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª: @CafeDateInc")
        return

    await state.clear()
    user_id = message.from_user.id
    logger.info(f"Start command from {user_id}")
    profile = db.get_profile(user_id)

    if profile:
        # # await show_profile_info(message, profile)
        # photo_id, caption = await show_profile_info(message, profile)
        # # –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –µ—Å—Ç—å ‚Äì –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ
        # await state.set_state(ProfileStates.EDIT_PROFILE)
        # await on_edit_params(callback=show_profile_info)

        await state.set_state(ProfileStates.EDIT_PROFILE)
        # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –º–µ–Ω—é, —á—Ç–æ–±—ã –Ω–µ –º–µ—à–∞–ª–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        await message.answer("‚è≥ –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–≤–æ—é –∞–Ω–∫–µ—Ç—É...",
                         reply_markup=types.ReplyKeyboardRemove())
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ+–¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è —Å –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∞–º–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        caption = (f" –ò–º—è: {profile['name']}\n"
        f" –í–æ–∑—Ä–∞—Å—Ç: {profile['age']}\n"
        f" –ü–æ–ª: {profile['gender']}\n"
        f" –ò—â–µ—Ç: {profile['looking_for']}\n"
        f" –ì–æ—Ä–æ–¥: {profile['city'] or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
        f" –û —Å–µ–±–µ: {profile['bio'][:1000]}")
        if profile.get('photo_id'):
            await message.answer_photo(profile['photo_id'], caption=caption,
            reply_markup=get_edit_menu_kb())
        else:
            await message.answer(caption, reply_markup=get_edit_menu_kb())
    else:
        # –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—è –Ω–µ—Ç ‚Äì –∑–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        await state.set_state(ProfileStates.NAME)
        await message.answer("–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?", reply_markup=build_cancel_keyboard())

async def show_liked_profile(src: Union[Message, CallbackQuery], state: FSMContext):
    data = await state.get_data()
    idx = data["likes_index"]
    likers = data["liked_ids"]
    target_id = likers[idx]

    # Pull their full profile
    prof = db.get_profile(target_id)
    text = (
        f"üë§ {prof['name']}, {prof['age']} –ª–µ—Ç\n"
        f"üöª {prof['gender']} –∏—â–µ—Ç {prof['looking_for']}\n"
        f"üìç {prof['city']}\n"
        f"üìù {prof['bio'][:200]}"
    )
    kb = InlineKeyboardMarkup(
        inline_keyboard=[[
            InlineKeyboardButton(
                text="‚ù§Ô∏è –ü–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫",
                callback_data=f"likes_accept:{prof['user_id']}"
            ),
            InlineKeyboardButton(
                text="üíî –î–∏–∑–ª–∞–π–∫",
                callback_data=f"likes_decline:{prof['user_id']}"
            )
        ]]
    )
    if isinstance(src, Message):
        await src.answer_photo(photo=prof["photo_id"], caption=text, reply_markup=kb)
    else:  # CallbackQuery
        await src.message.edit_media(
            InputMediaPhoto(media=prof["photo_id"], caption=text),
            reply_markup=kb
        )

@common_router.message(Command("likes"))
async def cmd_likes(message: types.Message, state: FSMContext):
    me = message.from_user.id
    # 1) –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Å–µ—Ö, –∫—Ç–æ –ª–∞–π–∫–Ω—É–ª –≤–∞—Å
    raw = get_liked_by(me)

    # 2) –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–µ—Ö, –∫–æ–≥–æ –≤—ã —É–∂–µ –ª–∞–π–∫–Ω—É–ª–∏ –∏–ª–∏ –¥–∏–∑–ª–∞–π–∫–Ω—É–ª–∏
    likers = [
        prof for prof in raw
        if not user_liked(me, prof['user_id'])
        and not user_disliked(me, prof['user_id'])
    ]

    profile = db.get_profile(me)
    gender = profile["gender"] if profile else "–ü–∞—Ä–µ–Ω—å"

    if not likers:
        await message.answer(
            "–ù–æ–≤—ã—Ö –ª–∞–π–∫–æ–≤ –Ω–µ—Ç ‚è≥ –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é‚Ä¶",
            reply_markup=build_menu_keyboard(gender)
        )
        return

    # 3) –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ state –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
    await state.update_data(liked_ids=likers, likes_index=0)
    await state.set_state(ProfileStates.LIKES)

    # 4) –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é –∞–Ω–∫–µ—Ç—É
    await show_liked_profile(message, state)

@common_router.message(Command("menu"))
async def cmd_menu(message: types.Message, state: FSMContext, bot : Bot):
    member = await bot.get_chat_member(chat_id="@CafeDateInc", user_id=message.from_user.id)

    if member.status in ("left", "kicked"):
        await message.answer("‚ùóÔ∏è–î–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª: @CafeDateInc")
        return

    await state.clear()
    user_id = message.from_user.id
    logger.info(f"Start command from {user_id}")
    profile = db.get_profile(user_id)

    if profile:
        await state.set_state(ProfileStates.MENU)
        user_id = message.from_user.id
        profile = get_profile(user_id)
        text = (
            "üåü –≠—Ç–æ —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞:\n\n"
            f"üë§ –ò–º—è: {profile['name']}\n"
            f"üéÇ –í–æ–∑—Ä–∞—Å—Ç: {profile['age']}\n"
            f"üöª –ü–æ–ª: {profile['gender']}\n"
            f"üíò –ò—â–µ—Ç: {profile['looking_for']}\n"
            f"üìç –ì–æ—Ä–æ–¥: {profile['city']}\n"
            f"üìñ –û —Å–µ–±–µ: {profile['bio'][:1000]}"
        )
        await message.answer(
            text="‚è≥ –ó–∞–≥—Ä—É–∂–∞—é –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å‚Ä¶", 
            reply_markup=ReplyKeyboardRemove()
        )
        menu_kb = build_menu_keyboard(profile["gender"])
        if profile.get('photo_id'):
            await message.answer_photo(
                photo=profile["photo_id"],
                caption=text,
                reply_markup=menu_kb
            )
        else:
            await message.answer(
                text=text,
                reply_markup=menu_kb
            )

    else:
        # –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—è –Ω–µ—Ç ‚Äì –∑–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        await state.set_state(ProfileStates.NAME)
        await message.answer("–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?", reply_markup=build_cancel_keyboard())


# Export the router
__all__ = ['common_router']