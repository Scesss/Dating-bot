from aiogram import F, Router, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from keyboards.builders import get_edit_menu_kb, get_params_menu_kb
from states.profile_states import ProfileStates
from aiogram.filters import StateFilter
from database import db
from keyboards.builders import build_menu_keyboard, build_cancel_keyboard


router = Router()

def generate_profile_caption(profile: dict) -> str:
    """
    –°–æ–±–∏—Ä–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ—Ñ–∏–ª—è:
    - –∏–º—è, –≤–æ–∑—Ä–∞—Å—Ç, –ø–æ–ª
    - –∫–æ–≥–æ –∏—â–µ—Ç, –≥–æ—Ä–æ–¥ (–∏–ª–∏ '–ù–µ —É–∫–∞–∑–∞–Ω')
    - —Ç–µ–∫—Å—Ç '–û —Å–µ–±–µ' (–æ–±—Ä–µ–∑–∞–Ω–Ω—ã–π –¥–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤)
    """
    return (
        f"–ò–º—è: {profile.get('name', 'N/A')}\n"
        f"–í–æ–∑—Ä–∞—Å—Ç: {profile.get('age', 'N/A')}\n"
        f"–ü–æ–ª: {profile.get('gender', 'N/A')}\n"
        f"–ò—â–µ—Ç: {profile.get('looking_for', 'N/A')}\n"
        f"–ì–æ—Ä–æ–¥: {profile.get('city') or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
        f"–û —Å–µ–±–µ: {(profile.get('bio') or '')[:1000]}"
    )



# @router.message(StateFilter(ProfileStates.EDIT_PROFILE))
# async def cmd_edit(message: types.Message, state: FSMContext):
#     await message.answer(
#         "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
#         reply_markup=get_edit_menu_kb()
#     )

@router.callback_query(F.data == "cancel_edit", StateFilter(ProfileStates.EDIT_PROFILE))
async def on_cancel_edit(callback: types.CallbackQuery, state: FSMContext):
    # –û—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã –∏ –≤–µ—Ä–Ω—É—Ç—å –≤ –º–µ–Ω—é
    await callback.message.delete()
    await state.set_state(ProfileStates.MENU)
    await callback.message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=build_menu_keyboard())
    await callback.answer()



@router.callback_query(F.data == "refill_profile", StateFilter(ProfileStates.EDIT_PROFILE))
async def on_refill_profile(callback: types.CallbackQuery, state: FSMContext):
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Ñ–∏–ª–µ–º
    await callback.message.delete()
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ
    await state.clear()
    await callback.message.answer("–ù–∞—á–Ω—ë–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã —Å –Ω–∞—á–∞–ª–∞. –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?", reply_markup=build_cancel_keyboard())
    await state.set_state(ProfileStates.NAME)
    await callback.answer()



@router.callback_query(F.data == "edit_params", StateFilter(ProfileStates.EDIT_PROFILE))
async def on_edit_params(callback: types.CallbackQuery):
    # –ú–µ–Ω—è–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –Ω–∞ —Å–ø–∏—Å–æ–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    await callback.message.edit_reply_markup(reply_markup=get_params_menu_kb())
    await callback.answer()  # —É–±–∏—Ä–∞–µ–º "—á–∞—Å–∏–∫–∏" –Ω–∞ –∫–Ω–æ–ø–∫–µ

@router.callback_query(F.data == "back_to_edit_menu", StateFilter(ProfileStates.EDIT_PROFILE))
async def on_back_to_edit_menu(callback: types.CallbackQuery):
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π (—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å/–∑–∞–ø–æ–ª–Ω–∏—Ç—å/–Ω–∞–∑–∞–¥)
    await callback.message.edit_reply_markup(reply_markup=get_edit_menu_kb())
    await callback.answer()

# @router.callback_query(F.data == "edit_name", StateFilter(ProfileStates.EDIT_PROFILE))
# async def on_edit_name(callback: types.CallbackQuery, state: FSMContext):
#     # –£–±—Ä–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø—Ä–æ—Ñ–∏–ª—è, —á—Ç–æ–±—ã –Ω–µ –Ω–∞–∂–∏–º–∞–ª–∏ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
#     await callback.message.edit_reply_markup(reply_markup=None)
#     # –°–ø—Ä–æ—Å–∏—Ç—å –Ω–æ–≤–æ–µ –∏–º—è
#     await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è:", reply_markup=build_cancel_keyboard())
#     await state.set_state(ProfileStates.EDIT_NAME)
#     await callback.answer()

# @router.message(StateFilter(ProfileStates.EDIT_NAME))
# async def process_edit_name(message: types.Message, state: FSMContext):
#     if message.text == "üö´ –û—Ç–º–µ–Ω–∞":
#         # –û—Ç–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É –ø—Ä–æ—Ñ–∏–ª—è
#         profile = db.get_profile(message.from_user.id)
#         if profile:
#             # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å —Å–Ω–æ–≤–∞
#             await message.answer("–ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=types.ReplyKeyboardRemove())
#             await message.answer_photo(profile['photo_id'],
#                                        caption=generate_profile_caption(profile),
#                                        reply_markup=get_edit_menu_kb())
#         await state.set_state(ProfileStates.EDIT_PROFILE)
#         return
#     # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã –∏–º–µ–Ω–∏
#     if len(message.text.strip()) < 2:
#         await message.answer("–ò–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–æ—Ä–æ—á–µ –¥–≤—É—Ö –±—É–∫–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:")
#         return
#     # –û–±–Ω–æ–≤–ª—è–µ–º –∏–º—è –≤ –ë–î
#     db.update_profile_field(message.from_user.id, 'name', message.text.strip())
#     # –°–æ–æ–±—â–∞–µ–º –æ–± —É—Å–ø–µ—à–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
#     await message.answer("–ò–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ.", reply_markup=types.ReplyKeyboardRemove())
#     # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–Ω–æ–≤–∞
#     profile = db.get_profile(message.from_user.id)
#     if profile:
#         await message.answer_photo(profile['photo_id'],
#                                    caption=generate_profile_caption(profile),
#                                    reply_markup=get_edit_menu_kb())
#     await state.set_state(ProfileStates.EDIT_PROFILE)

@router.callback_query(F.data == "edit_age", StateFilter(ProfileStates.EDIT_PROFILE))
async def on_edit_age(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.edit_reply_markup(reply_markup=None)
    await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –≤–æ–∑—Ä–∞—Å—Ç:", reply_markup=build_cancel_keyboard())
    await state.set_state(ProfileStates.EDIT_AGE)
    await callback.answer()

@router.message(StateFilter(ProfileStates.EDIT_AGE))
async def process_edit_age(message: types.Message, state: FSMContext):
    if message.text == "üö´ –û—Ç–º–µ–Ω–∞":
        # –û—Ç–º–µ–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è ‚Äì –≤–µ—Ä–Ω—É—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
        profile = db.get_profile(message.from_user.id)
        if profile:
            await message.answer("–ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=types.ReplyKeyboardRemove())
            await message.answer_photo(profile['photo_id'],
                                       caption=generate_profile_caption(profile),
                                       reply_markup=get_edit_menu_kb())
        await state.set_state(ProfileStates.EDIT_PROFILE)
        return
    if not message.text.isdigit():
        await message.answer("–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:")
        return
    age = int(message.text)
    if age < 14 or age > 100:
        await message.answer("–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç (14-100).")
        return
    db.update_profile_field(message.from_user.id, 'age', age)
    await message.answer("–í–æ–∑—Ä–∞—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω.", reply_markup=types.ReplyKeyboardRemove())
    profile = db.get_profile(message.from_user.id)
    if profile:
        await message.answer_photo(profile['photo_id'],
                                   caption=generate_profile_caption(profile),
                                   reply_markup=get_edit_menu_kb())
    await state.set_state(ProfileStates.EDIT_PROFILE)


@router.callback_query(F.data == "edit_bio", StateFilter(ProfileStates.EDIT_PROFILE))
async def on_edit_bio(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.edit_reply_markup(reply_markup=None)
    await callback.message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç '–û —Å–µ–±–µ':", reply_markup=build_cancel_keyboard())
    await state.set_state(ProfileStates.EDIT_BIO)
    await callback.answer()

@router.message(StateFilter(ProfileStates.EDIT_BIO))
async def process_edit_bio(message: types.Message, state: FSMContext):
    if message.text == "üö´ –û—Ç–º–µ–Ω–∞":
        profile = db.get_profile(message.from_user.id)
        if profile:
            await message.answer("–ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=types.ReplyKeyboardRemove())
            await message.answer_photo(profile['photo_id'],
                                       caption=generate_profile_caption(profile),
                                       reply_markup=get_edit_menu_kb())
        await state.set_state(ProfileStates.EDIT_PROFILE)
        return
    bio_text = message.text.strip()
    if len(bio_text) > 1000:
        await message.answer("–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç. –ú–∞–∫—Å–∏–º—É–º 1000 —Å–∏–º–≤–æ–ª–æ–≤.")
        return
    db.update_profile_field(message.from_user.id, 'bio', bio_text)
    await message.answer("–û–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.", reply_markup=types.ReplyKeyboardRemove())
    profile = db.get_profile(message.from_user.id)
    if profile:
        await message.answer_photo(profile['photo_id'],
                                   caption=generate_profile_caption(profile),
                                   reply_markup=get_edit_menu_kb())
    await state.set_state(ProfileStates.EDIT_PROFILE)



@router.callback_query(F.data == "edit_photo", StateFilter(ProfileStates.EDIT_PROFILE))
async def on_edit_photo(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.edit_reply_markup(reply_markup=None)
    await callback.message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è:", reply_markup=build_cancel_keyboard())
    await state.set_state(ProfileStates.EDIT_PHOTO)
    await callback.answer()

@router.message(StateFilter(ProfileStates.EDIT_PHOTO), F.photo)
async def process_edit_photo(message: types.Message, state: FSMContext):
    # –ë–µ—Ä—ë–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Ñ–æ—Ç–æ –∏–∑ —Å–ø–∏—Å–∫–∞ (–Ω–∞–∏–≤—ã—Å—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ)
    photo = message.photo[-1]
    new_file_id = photo.file_id
    db.update_profile_field(message.from_user.id, 'photo_id', new_file_id)
    await message.answer("–§–æ—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.", reply_markup=types.ReplyKeyboardRemove())
    profile = db.get_profile(message.from_user.id)
    if profile:
        await message.answer_photo(profile['photo_id'],
                                   caption=generate_profile_caption(profile),
                                   reply_markup=get_edit_menu_kb())
    await state.set_state(ProfileStates.EDIT_PROFILE)



# @router.callback_query(F.data == "edit_geo", StateFilter(ProfileStates.EDIT_PROFILE))
# async def edit_geo(callback: types.CallbackQuery, state: FSMContext):
#     await callback.answer()
