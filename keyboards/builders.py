from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.utils.keyboard import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram import types

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
def get_edit_menu_kb():
    builder = InlineKeyboardBuilder()
    builder.row(
        types.InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
            callback_data="cancel_edit"
        ),
        types.InlineKeyboardButton(
            text="üîÑ –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞–Ω–æ–≤–æ",
            callback_data="refill_profile"
        )
    )
    builder.row(
        types.InlineKeyboardButton(
            text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã",
            callback_data="edit_params"
        )
    )
    return builder.as_markup()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
def get_params_menu_kb():
    builder = InlineKeyboardBuilder()
    builder.row(
        types.InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
            callback_data="back_to_edit_menu"
        ),
        types.InlineKeyboardButton(
            text="üî¢ –í–æ–∑—Ä–∞—Å—Ç",
            callback_data="edit_age"
        )
    )
    builder.row(
        types.InlineKeyboardButton(
            text="üìù Bio",
            callback_data="edit_bio"
        ),
        types.InlineKeyboardButton(
            text="üñº –§–æ—Ç–æ",
            callback_data="edit_photo"
        )
    )

    return builder.as_markup()

def build_menu_keyboard(user_gender: str):
    profile_label = "üë®üèº –ú–æ—è –ê–Ω–∫–µ—Ç–∞" if user_gender == "–ü–∞—Ä–µ–Ω—å" else "üë©üèª‚Äçü¶∞ –ú–æ—è –ê–Ω–∫–µ—Ç–∞"
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üîç –°–º–æ—Ç—Ä–µ—Ç—å –ê–Ω–∫–µ—Ç—ã")],
            [KeyboardButton(text=profile_label)],
            [KeyboardButton(text="üëë –¢–æ–ø"), KeyboardButton(text="üåô –°–æ–Ω")]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )


def build_gender_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–ü–∞—Ä–µ–Ω—å"), KeyboardButton(text="–î–µ–≤—É—à–∫–∞")],
            [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )

def build_preference_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–ü–∞—Ä–Ω–∏"), KeyboardButton(text="–î–µ–≤—É—à–∫–∏")],
            [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )

def build_confirmation_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="‚úÖ –í–µ—Ä–Ω–æ")],
            [KeyboardButton(text="üîÑ –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞–Ω–æ–≤–æ")]
        ],
        resize_keyboard=True
    )

# Add this new function
def build_location_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìç –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º", request_location=True)],
            # [KeyboardButton(text="‚úèÔ∏è –í–≤–µ—Å—Ç–∏ –≥–æ—Ä–æ–¥ –≤—Ä—É—á–Ω—É—é")],
            [KeyboardButton(text="üö´ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")],
            [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")]
        ],
        resize_keyboard=True,

        one_time_keyboard=True
    )

def build_back_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")]],
        resize_keyboard=True,
        one_time_keyboard=True
    )

def build_cancel_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="üö´ –û—Ç–º–µ–Ω–∞")]],



        resize_keyboard=True,
        one_time_keyboard=True
    )

def build_restart_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="üö´ –û—Ç–º–µ–Ω–∞")],
                  [KeyboardButton(text="‚úÖ –í–ø–µ—Ä–µ–¥")]
                  ],
        resize_keyboard=True,
        one_time_keyboard=True
    )

def get_browse_keyboard(target_id: int):
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üëç –õ–∞–π–∫",              callback_data=f"like_simple:{target_id}"),
            InlineKeyboardButton(text="üí¨ –õ–∞–π–∫ —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º", callback_data=f"like_msg:{target_id}"),
            InlineKeyboardButton(text="üí∞ –õ–∞–π–∫ —Å —á–µ–∫–æ–º",      callback_data=f"like_cash:{target_id}")
        ],
        [
            InlineKeyboardButton(text="üëé –î–∏–∑–ª–∞–π–∫",           callback_data=f"dislike:{target_id}"),
            InlineKeyboardButton(text="üìñ –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä", callback_data="exit_browse")
        ]
    ])
def build_match_keyboard(user_id):
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text="üíåÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å —ç—Ç–æ–º—É —á–µ–ª–æ–≤–µ–∫—É",
            url=f"tg://user?id={user_id}"
        )],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="matches_prev"),
         InlineKeyboardButton(text="‚ñ∂Ô∏è –í–ø–µ—Ä—ë–¥", callback_data="matches_next")],
        [InlineKeyboardButton(text="‚óÄ –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä", callback_data="exit_matches")]
    ])
    return kb



def build_top_navigation_keyboard(
    current_index: int,
    total: int
) -> InlineKeyboardMarkup:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
      ‚Äì –î–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è: [‚ùå –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é] [‚û°Ô∏è]
      ‚Äì –î–ª—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ:      [‚ùå –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é] [‚¨ÖÔ∏è]
      ‚Äì –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö:       [‚¨ÖÔ∏è] [‚ùå –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é] [‚û°Ô∏è]
    –ò –≤–Ω–∏–∑—É –≤—Å–µ–≥–¥–∞ —Ä—è–¥ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º ‚Äú—Ç–µ–∫—É—â–∞—è/–≤—Å–µ–≥–æ‚Äù.
    """

    if current_index == 0:
        # –ø–µ—Ä–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ ¬´–≤–ø–µ—Ä—ë–¥¬ª
        kb = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚¨áÔ∏è",            callback_data="top:next")],
            [InlineKeyboardButton(text="‚óÄ –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä", callback_data="top:exit")]
        ])

    elif current_index == total - 1:
        # –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–æ—Ñ–∏–ª—å ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ ¬´–Ω–∞–∑–∞–¥¬ª
        kb = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚¨ÜÔ∏è", callback_data="top:prev")],
            [InlineKeyboardButton(text="‚óÄ –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä", callback_data="top:exit")]
        ])

    else:
        # –ª—é–±–æ–π –ø—Ä–æ—Ñ–∏–ª—å –º–µ–∂–¥—É –ø–µ—Ä–≤—ã–º –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–º
        kb = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚¨ÜÔ∏è", callback_data="top:prev")],
            [InlineKeyboardButton(text="‚¨áÔ∏è", callback_data="top:next")],
            [InlineKeyboardButton(text="‚óÄ –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä", callback_data="top:exit")]
        ])

    # —Å—Ç—Ä–æ–∫–∞ —Å—Ç–∞—Ç—É—Å–∞: ‚Äú1/10‚Äù, ‚Äú2/10‚Äù –∏ —Ç.–¥.
    # kb.row(
    #     InlineKeyboardButton(text=f"{current_index + 1}/{total}", callback_data="ignore")
    # )

    return kb
